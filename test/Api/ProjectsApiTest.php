<?php
/**
 * ProjectsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Troi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Troi API
 *
 * This is the official API documentation of Troi.  # Authentication  Troi offers basic auth for authentication.  <security-definitions />
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: helpdesk@troi.de
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.3.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Troi\Test\Api;

use \Troi\Configuration;
use \Troi\ApiException;
use \Troi\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ProjectsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Troi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ProjectsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for projectsGet
     *
     * Fetch all projects from given client.
     *
     */
    public function testProjectsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectsIdDelete
     *
     * Delete project.
     *
     */
    public function testProjectsIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectsIdGet
     *
     * Fetch project for the given project ID.
     *
     */
    public function testProjectsIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectsIdPut
     *
     * Update project.
     *
     */
    public function testProjectsIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectsPost
     *
     * Save project.
     *
     */
    public function testProjectsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
