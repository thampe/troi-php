<?php
/**
 * ApiAbsenceTypeTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Troi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Troi API
 *
 * This is the official API documentation of Troi.  # Authentication  Troi offers basic auth for authentication.  <security-definitions />
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: helpdesk@troi.de
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.3.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Troi\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ApiAbsenceTypeTest Class Doc Comment
 *
 * @category    Class
 * @description ApiAbsenceType
 * @package     Troi
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ApiAbsenceTypeTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ApiAbsenceType"
     */
    public function testApiAbsenceType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "absence_type_id"
     */
    public function testPropertyAbsenceTypeId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "absence_type_description"
     */
    public function testPropertyAbsenceTypeDescription()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "absence_type_abbrevation"
     */
    public function testPropertyAbsenceTypeAbbrevation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "absence_type_color"
     */
    public function testPropertyAbsenceTypeColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "absence_type_allowed"
     */
    public function testPropertyAbsenceTypeAllowed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "absence_type_system"
     */
    public function testPropertyAbsenceTypeSystem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "absence_type_freeday"
     */
    public function testPropertyAbsenceTypeFreeday()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "absence_type_freeday_ignore"
     */
    public function testPropertyAbsenceTypeFreedayIgnore()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "absence_type_business_trip"
     */
    public function testPropertyAbsenceTypeBusinessTrip()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "absence_type_icon"
     */
    public function testPropertyAbsenceTypeIcon()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "absence_type_holiday"
     */
    public function testPropertyAbsenceTypeHoliday()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "absence_type_ill"
     */
    public function testPropertyAbsenceTypeIll()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "absence_type_work_time"
     */
    public function testPropertyAbsenceTypeWorkTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "absence_type_allow_resource_calculation"
     */
    public function testPropertyAbsenceTypeAllowResourceCalculation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "absence_type_allow_travel_cost_recording"
     */
    public function testPropertyAbsenceTypeAllowTravelCostRecording()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "absence_type_background_color"
     */
    public function testPropertyAbsenceTypeBackgroundColor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "absence_type_is_anonymous"
     */
    public function testPropertyAbsenceTypeIsAnonymous()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "absence_type_is_active"
     */
    public function testPropertyAbsenceTypeIsActive()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "absence_type_company_shutdown"
     */
    public function testPropertyAbsenceTypeCompanyShutdown()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "absence_type_count_to_project_balance"
     */
    public function testPropertyAbsenceTypeCountToProjectBalance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "class_name"
     */
    public function testPropertyClassName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
